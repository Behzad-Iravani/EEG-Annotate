%% This annotation example runs the following five batch scripts.
%
%  1) Preprocess
%  2) Feature extraction
%  3) Score estimation1: classification score of sub-window samples
%  4) Score estimation2: annotation score of window samples
%  5) Report
%
%  Reference:
%  Kyung-min Su, W. David Hairston, Kay Robbins, "Automated annotation for continuous EEG data", 2016
%  
%  Kyung-min Su, The University of Texas at San Antonio, 2016-11-07
%

clear; close all;
pop_editoptions('option_single', false, 'option_savetwofiles', false);

%% 1) Preprocess
%  Apply general preprocessings on the raw EEG data
%  Do high pass filtering and remove artifacts using the ASR tool
% batch_preprocess_highPassNew('D:\LocalData\EEGData\miniVEP\', ...
%              'outPath', '.\tmp\highPass', ...
%              'cutoff', 0.5);
% batch_preprocess_PREP('Z:\Data 3\VEP\VEP_BIOSIMI', ...
%              'outPath', '.\temp\PREP', ...
%              'lineFrequencies', [60, 120, 180, 212, 240], ...
%              'referenceChannels', 1:64, ...
%              'evaluationChannels', 1:64, ...
%              'rereferencedChannels', 1:70, ...
%              'detrendChannels', 1:70, ...
%              'lineNoiseChannels', 1:70, ...
%              'detrendType', 'high pass', ...
%              'detrendCutoff', 1, ...
%              'referenceType', 'robust', ...
%              'meanEstimateType', 'median', ...
%              'interpolationOrder', 'post-reference', ...
%              'keepFiltered', false);
batch_preprocess_VEP_exclusive('.\temp\PREP', ...
             'outPath', '.\temp\VEP2', ...
             'boundary', 1);
batch_preprocess_cleanASR('.\temp\VEP2', ...
             'outPath', '.\temp\cleanASR', ...
             'burstCriterion', 20);

%% 2) Feature extraction
%  Feature: avearge power of subbands and subwindows
%  Note: to process different headsets data in the same way, 
%        it generates new EEG data for the target headset 
%        and extracts features from the new data.
batch_feature_averagePower('.\temp\cleanASR', ...
             'outPath', '.\temp\averagePower', ...
             'targetHeadset', 'biosemi64.sfp', ...
             'subbands', [0 4; 4 8; 8 12; 12 16; 16 20; 20 24; 24 28; 28 32], ...
             'windowLength', 1.0, ...
             'subWindowLength', 0.125, ...
             'step', 0.125);

%% 3) Classification score of window samples
%   Using ARRLS classifier or LDA classifier
%   For training classifiers, use VEP datasets having friend (34) and foe (35) classes
%   In this test, we use the same (VEP) datasets for training and for test.
batch_classify_ARRLSs('.\temp\averagePower', ...  % test data
             '.\temp\averagePower', ...          % training data
             'outPath', '.\temp\scoreARRLS', ...
             'targetClass', '34', ...
             'fExcludeBoundaryInTest', true, ...
             'p', 10, ...
             'sigma', 0.1, ...
             'lambda', 10.0, ...
             'gamma', 1.0, ...
             'ker', 'linear');

%% 4) Annotation score of sub-window
%  Estimate annotation scores from classification scores.
%  using weighting, zero-out, and fuzzy voting
batch_annotation('.\temp\scoreARRLS', ...
             'outPath', '.\output\annotation', ...
             'excludeSelf', true, ...
             'fHighRecall', false, ...
             'position', 8, ...
             'weights', [0.5 0.5 0.5 0.5 0.5 1 3 8 3 1 0.5 0.5 0.5 0.5 0.5]);

%%  5) Report
%   Generate reports like precision, recall, and plots
batch_report_recall('.\output\annotation', ...
             'outPath', '.\output\report', ...
             'targetClasses', {'34'}, ...   % hit if it is any one of these class
             'timinigTolerances', 0:7, ...
             'retrieveNumbs', 100:100:500); 
         
%% Done
disp('Done. To save space, you can delete the temp folder.');
